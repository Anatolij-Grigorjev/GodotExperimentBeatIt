[gd_scene load_steps=6 format=1]

[ext_resource path="res://addons/net.kivano.fsm/content/FSMGraph/FSMGraphUI/FSMGraphUI.gd" type="Script" id=1]
[ext_resource path="res://addons/net.kivano.fsm/content/FSMGraph/FSMGraph.tscn" type="PackedScene" id=2]
[ext_resource path="res://addons/net.kivano.fsm/content/FSMGraph/FSMGraphUI/NewElementBtn/NewElementBtn.tscn" type="PackedScene" id=3]
[ext_resource path="res://addons/net.kivano.fsm/assets/white.png" type="Texture" id=4]

[sub_resource type="Animation" id=1]

resource/name = "default"
length = 1.0
loop = false
step = 0.1
tracks/0/type = "value"
tracks/0/path = NodePath(".:anchor/left")
tracks/0/interp = 1
tracks/0/imported = false
tracks/0/keys = {
"times": FloatArray( 0 ),
"transitions": FloatArray( 1 ),
"update": 1,
"values": [ 0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:anchor/top")
tracks/1/interp = 1
tracks/1/imported = false
tracks/1/keys = {
"times": FloatArray( 0 ),
"transitions": FloatArray( 1 ),
"update": 1,
"values": [ 0 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:anchor/right")
tracks/2/interp = 1
tracks/2/imported = false
tracks/2/keys = {
"times": FloatArray( 0 ),
"transitions": FloatArray( 1 ),
"update": 1,
"values": [ 1 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath(".:anchor/bottom")
tracks/3/interp = 1
tracks/3/imported = false
tracks/3/keys = {
"times": FloatArray( 0 ),
"transitions": FloatArray( 1 ),
"update": 1,
"values": [ 1 ]
}
tracks/4/type = "value"
tracks/4/path = NodePath(".:margin/left")
tracks/4/interp = 1
tracks/4/imported = false
tracks/4/keys = {
"times": FloatArray( 0 ),
"transitions": FloatArray( 1 ),
"update": 1,
"values": [ 0.0 ]
}
tracks/5/type = "value"
tracks/5/path = NodePath(".:margin/top")
tracks/5/interp = 1
tracks/5/imported = false
tracks/5/keys = {
"times": FloatArray( 0 ),
"transitions": FloatArray( 1 ),
"update": 1,
"values": [ 0.0 ]
}
tracks/6/type = "value"
tracks/6/path = NodePath(".:margin/right")
tracks/6/interp = 1
tracks/6/imported = false
tracks/6/keys = {
"times": FloatArray( 0 ),
"transitions": FloatArray( 1 ),
"update": 1,
"values": [ 0.0 ]
}
tracks/7/type = "value"
tracks/7/path = NodePath(".:margin/bottom")
tracks/7/interp = 1
tracks/7/imported = false
tracks/7/keys = {
"times": FloatArray( 0 ),
"transitions": FloatArray( 1 ),
"update": 1,
"values": [ 0.0 ]
}

[node name="FSMGraphUI" type="Popup"]

anchor/right = 1
anchor/bottom = 1
focus/ignore_mouse = false
focus/stop_mouse = true
size_flags/horizontal = 2
size_flags/vertical = 2
margin/left = 0.0
margin/top = 0.0
margin/right = 0.0
margin/bottom = 0.0
popup/exclusive = false
script/script = ExtResource( 1 )

[node name="FSMGraph" parent="." instance=ExtResource( 2 )]

[node name="btnRefresh" type="Button" parent="."]

visibility/opacity = 0.9
focus/ignore_mouse = false
focus/stop_mouse = true
size_flags/horizontal = 2
size_flags/vertical = 2
margin/left = 3.0
margin/top = 4.0
margin/right = 63.0
margin/bottom = 24.0
toggle_mode = false
enabled_focus_mode = 2
shortcut = null
text = "Refresh"
flat = false

[node name="btnHelp" type="Button" parent="."]

visibility/opacity = 0.9
focus/ignore_mouse = false
focus/stop_mouse = true
size_flags/horizontal = 2
size_flags/vertical = 2
margin/left = 3.0
margin/top = 27.0
margin/right = 63.0
margin/bottom = 47.0
toggle_mode = false
enabled_focus_mode = 2
shortcut = null
text = "Help"
flat = false

[node name="btnNewState" type="Button" parent="."]

visibility/visible = false
visibility/opacity = 0.9
focus/ignore_mouse = false
focus/stop_mouse = true
size_flags/horizontal = 2
size_flags/vertical = 2
margin/left = 3.0
margin/top = 27.0
margin/right = 122.0
margin/bottom = 47.0
toggle_mode = false
enabled_focus_mode = 2
shortcut = null
text = "Create new State"
flat = false

[node name="NewElementBtn" parent="." instance=ExtResource( 3 )]

margin/left = 502.0
margin/top = 248.0
margin/right = 542.0
margin/bottom = 288.0

[node name="initSetup" type="AnimationPlayer" parent="."]

playback/process_mode = 1
playback/default_blend_time = 0.0
root/root = NodePath("..")
anims/default = SubResource( 1 )
playback/active = true
playback/speed = 1.0
blend_times = [  ]
autoplay = ""

[node name="debug" type="Label" parent="."]

focus/ignore_mouse = true
focus/stop_mouse = true
size_flags/horizontal = 2
size_flags/vertical = 0
margin/left = 0.0
margin/top = 0.0
margin/right = 523.0
margin/bottom = 115.0
percent_visible = 1.0
lines_skipped = 0
max_lines_visible = -1

[node name="transitionScriptChooseDialog" type="FileDialog" parent="."]

visibility/visible = false
focus/ignore_mouse = false
focus/stop_mouse = true
size_flags/horizontal = 2
size_flags/vertical = 2
margin/left = 195.0
margin/top = 92.0
margin/right = 825.0
margin/bottom = 485.0
popup/exclusive = false
window/title = "Open a File"
dialog/hide_on_ok = false
mode = 0
access = 0
filters = StringArray( "*.gd" )
show_hidden_files = false

[node name="HelpText" type="RichTextLabel" parent="."]

visibility/visible = false
anchor/left = 3
anchor/right = 3
anchor/bottom = 1
focus/ignore_mouse = false
focus/stop_mouse = true
size_flags/horizontal = 2
size_flags/vertical = 2
margin/left = 409.0
margin/top = 0.0
margin/right = -453.0
margin/bottom = 12.0
bbcode/enabled = false
bbcode/bbcode = "##################################### README  ###############################
#
# * To create new state check  \"Create New:\" subsection in FSM inspector 
# 
# * Dont be afraid to check FSM script to check available methods 
#
# * Exported Variables of FSM which are intended to be used by users:
#
#     NodePath path2LogicRoot: states usually perform logic based on variables in
#         some external node, like 'Enemy'. This variable usually points to this node. 
#         It dont have any other purpose other than to be available for child states.
#
#     bool onlyActiveStateOnTheScene: if this is true, then only active state is present
#         on scene tree. It might be handy if states have visual representation
#
#     bool initManually: #you can set this to true to set export vars in runtime from code,
#         before you will be able to use this FSM you will need to run init() function. 
#         Run init() only after setting exported variables.
#
#     string Initial state: you can choose from this list with which state FSM should start.
#
#     int updateMode: if set to manual, then it's up to you to update this FSM. In this case 
#         you need to call FSM.update(inDeltaTime) to update this fsm (usually once per frame)
#         
#
########## 
# * Exported variables that are editor helpers:
#
#      Subdirectory for states: you can set name of directory which will be automatically 
#          created to hold all states for this FSM
#
#      Create state with name: when you enter and accept name for a state it will be 
#          immediatelly created and added to scene tree as a child of current FSM
#          This state will have an unique script in which you can implement state logic.
#
#
###########
# * Functions that are intended to be used by users:
#
#     getStateID(): return name of current state
#
#     getState(): return node with current state  
#
#     changeStateTo(inNewStateID): can be used to change state. 
#        Usually dont need to be used if you are using graph to link your states
#      
#     stateTime(): returns how long current state is active
#
#     update(inDeltaTime): update FSM to update current state. Should be
#        used in every game tick, but should use it only if you are using 
#        updateMode=\"Manual\".
#
#    init(): use only if initManually = true. You will be able to pass additional arguments
#        to your states and transitions
#
#
################
# * Members that are intended to be used by users:
#    STATE: you can use this dictionary to access state id. Using is is recommended because it's less error prone than 
#        entering states ids by hand. ex. fsm.changeStateTo(fsm.STATE.START) <- when one of your states is named 'START')

"
visible_characters = -1

[node name="TextureFrame" type="TextureFrame" parent="HelpText"]

visibility/behind_parent = true
anchor/right = 1
anchor/bottom = 1
focus/ignore_mouse = true
focus/stop_mouse = true
size_flags/horizontal = 2
size_flags/vertical = 2
margin/left = 0.0
margin/top = 0.0
margin/right = 0.0
margin/bottom = 0.0
texture = ExtResource( 4 )
modulate = Color( 0.168627, 0.203922, 0.239216, 0.882353 )
expand = true
stretch_mode = 0

[node name="close" type="Button" parent="."]

anchor/left = 1
anchor/right = 1
focus/ignore_mouse = false
focus/stop_mouse = true
size_flags/horizontal = 2
size_flags/vertical = 2
margin/left = 20.0
margin/top = 0.0
margin/right = 0.0
margin/bottom = 20.0
toggle_mode = false
enabled_focus_mode = 2
shortcut = null
text = "X"
flat = false

[connection signal="resized" from="." to="." method="_on_FSMGraphUI_resized"]

[connection signal="arrowDragFinishedAtEmptySpace" from="FSMGraph" to="." method="_on_FSMGraph_arrowDragFinishedAtEmptySpace"]

[connection signal="openScriptRequest" from="FSMGraph" to="." method="_on_FSMGraph_openScriptRequest"]

[connection signal="selectNodeRequest" from="FSMGraph" to="." method="_on_FSMGraph_selectNodeRequest"]

[connection signal="pressed" from="btnRefresh" to="." method="_on_btnRefresh_pressed"]

[connection signal="pressed" from="btnHelp" to="." method="_on_btnHelp_pressed"]

[connection signal="pressed" from="btnNewState" to="." method="_on_btnNewState_pressed"]

[connection signal="stateCreateRequest" from="NewElementBtn" to="." method="_on_NewElementBtn_stateCreateRequest"]

[connection signal="transitionCreateRequest" from="NewElementBtn" to="." method="_on_NewElementBtn_transitionCreateRequest"]

[connection signal="confirmed" from="transitionScriptChooseDialog" to="." method="_on_transitionScriptChooseDialog_confirmed"]

[connection signal="file_selected" from="transitionScriptChooseDialog" to="." method="_on_transitionScriptChooseDialog_file_selected"]

[connection signal="pressed" from="close" to="." method="_on_close_pressed"]


